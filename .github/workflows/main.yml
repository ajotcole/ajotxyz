name: Deploy ajot.xyz blog

on:
  # run it on push to the default repository branch
  push:
    branches: [main]
  # run it during pull request
  pull_request:

jobs:
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      start-frontend: ${{ steps.filter-frontend.outputs.frontend }}
      start-strapi: ${{ steps.filter-strapi.outputs.strapi }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter-frontend
        with:
          filters: |
            frontend:
              - 'frontend/**'
      - uses: dorny/paths-filter@v2
        id: filter-strapi
        with:
          filters: |
            strapi:
              - 'strapi/**'

  build-frontend:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.start-frontend == 'true'
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - run: npm install --legacy-peer-deps
      - run: npm run build --if-present
      - name: Save artifact for next job
        uses: actions/upload-artifact@master
        with:
          name: ajotxyz-artifact
          path: frontend/dist

  deploy-frontend:
    runs-on: ubuntu-latest
    needs: build-frontend
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@master
      - name: Retrieve frontend artifact
        uses: actions/download-artifact@master
        with:
          name: ajotxyz-artifact
          path: frontend/dist
      - name: Setup Tailscale
        id: tailscale
        uses: tailscale/github-action@main
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
          version: 1.40.1
      - name: Copy to server
        uses: garygrossgarten/github-action-scp@v0.7.3
        with:
          local: "dist"
          host: ${{ secrets.HETZNER_IP }}
          port: 22
          remote: "staticpages/ajot_xyz"
          username: ${{ secrets.HETZNER_USERNAME }}
          password: ${{ secrets.HETZNER_PASSWORD }}
          privateKey: ${{ secrets.PRIVATE_KEY }}
          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}

  build-strapi:
    runs-on: ubuntu-latest
    needs: paths-filter
    if: needs.paths-filter.outputs.start-strapi == 'true'
    defaults:
      run:
        working-directory: ./strapi
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - run: npm install --legacy-peer-deps
      - run: npm run build --if-present
        env:
          CI: false

  push-strapi-docker-image:
    runs-on: ubuntu-latest
    needs: build-strapi
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./strapi
          tags: |
            ajotcole/ajotxyz-strapi:latest
          push: ${{ github.ref == 'refs/heads/main' }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-api-docker-image:
    runs-on: ubuntu-latest
    needs: push-strapi-docker-image
    if: github.event_name != 'pull_request'
    steps:
      - name: Test Output
        run: echo I will work in the future
